# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo-container
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: mongodb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: mongo@123
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
      volumes:
      - name: mongo-storage
        nfs:
          server: 172.31.47.119
          path: /mnt/nfs_share
          

---
# MongoDB ClusterIP Service (used by Spring app)
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP
---
# Spring Boot Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
      - name: spring-container
        image: sanchitraj5/docker-sp:1
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: mongodb
        - name: MONGO_DB_PASSWORD
          value: mongo@123
---
# Spring Boot NodePort Service (external access)
apiVersion: v1
kind: Service
metadata:
  name: spring-service
spec:
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
  type: NodePort
